# Project Intelligence: Tana Paste

## Project Overview
Tana Paste is a Raycast extension and Python script that converts text and Markdown to Tana's node-based format.

## Key Implementation Patterns

### Conversion Logic
- Core conversion happens in `src/utils/tana-converter.ts`
- Python alternative in `tana_converter.py`
- Both implementations share the same fundamental algorithm but are optimized for their respective environments

### Tana Format Requirements
- Headings must be prefixed with `- !!` 
- Fields follow the `key::value` format
- Proper indentation is critical for hierarchy
- Special formatting for dates: `[[date:YYYY-MM-DD]]`

### Command Structure
- All commands follow a consistent pattern:
  1. Get input (clipboard, selection, or direct input)
  2. Convert to Tana format
  3. Copy result to clipboard
  4. Notify user of success/failure

### Testing Approach
- Jest tests focus on isolated transformation functions
- Test cases cover various Markdown structures
- Edge cases are specifically targeted

## Project Preferences

### Code Style
- Functional programming approach
- Strong typing with TypeScript
- Clear separation of concerns
- Minimal dependencies

### Documentation
- Comments for complex logic
- Comprehensive README
- Detailed CHANGELOG following semantic versioning

### Development Workflow
- Test-driven development encouraged
- Manual testing for complex transformations
- Version bump and CHANGELOG update with each release

## Usage Patterns
- Raycast extension for quick daily conversions
- Python script for large documents or batch processing
- Most common use: converting notes from other apps to Tana

## Known Challenges
- Complex nested structures require careful indentation
- Performance considerations with large documents
- Edge cases in special formatting

## Future Directions
- Enhanced support for complex Markdown elements
- Performance optimizations
- Additional special format conversions 